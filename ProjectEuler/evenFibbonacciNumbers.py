# Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

# By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

def evenFibbonacciNumbers(n:int) ->int:
    firstNum = 0
    secondNum = 1
    totSum = 0
    finalSum = 0

    while(totSum<n):
        totSum = firstNum + secondNum
        firstNum = secondNum
        secondNum = totSum
        if totSum % 2 == 0:
            finalSum = totSum +finalSum
            print(f"TOTAL SUM: {totSum}")
    return finalSum
            

if __name__ == '__main__':
    result = evenFibbonacciNumbers(4000000)
    print(result)



