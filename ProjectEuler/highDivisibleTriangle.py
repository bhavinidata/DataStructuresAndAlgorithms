# The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

# 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

# Let us list the factors of the first seven triangle numbers:

#  1: 1
#  3: 1,3
#  6: 1,2,3,6
# 10: 1,2,5,10
# 15: 1,3,5,15
# 21: 1,3,7,21
# 28: 1,2,4,7,14,28
# We can see that 28 is the first triangle number to have over five divisors.

# What is the value of the first triangle number to have over five hundred divisors?

# Sum of n number T(n) = n(n+1)/2. This will also give tringle number of n.

import math
def highDivisor(n:int)->int:
    totSum = 0
    i = 1
    divisorCount =0
    while divisorCount <= n:
        totSum += i
        i +=1
        divisorCount =0
        for j in range(1, int(math.sqrt(totSum))+1):
            if totSum%j == 0:
                divisorCount += 2
        print(f"SUM: {totSum}")
        print(f"divCount: {divisorCount}")
    return totSum

if __name__ == '__main__':
    # result = highDivisor(5)
    result = highDivisor(500)
    print(f"answer is: {result}")

